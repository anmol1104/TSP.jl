using TSP
using Revise
using Test
using Random

@testset "TSP.jl" begin
    instances = ["d198", "a280"]
    methods   = [:random, :cw]
    œá   = ALNSParameters(
        kÃ≤   =   1                       ,
        lÃ≤   =   50                      ,
        lÃÖ   =   125                     ,
        kÃÖ   =   250                     ,
        Œ®·µ£  =   [
                    :randomnode!    , 
                    :relatednode!   ,
                    :worstnode!   
                ]                       , 
        Œ®·µ¢  =   [
                    :bestprecise!   ,
                    :bestperturb!   ,
                    :greedyprecise! ,
                    :greedyperturb! ,
                    :regret2!       ,
                    :regret3!
                ]                       ,
        Œ®‚Çó  =   [
                    :move!      ,
                    :opt!       ,
                    :swap!
                ]                       ,
        œÉ‚ÇÅ  =   33                      ,
        œÉ‚ÇÇ  =   9                       ,
        œÉ‚ÇÉ  =   13                      ,
        œâ   =   0.05                    ,
        œÑ   =   0.5                     ,
        ùúÉ   =   0.99975                 ,
        CÃ≤   =   30                      ,
        CÃÖ   =   60                      ,
        ŒºÃ≤   =   0.1                     ,
        ŒºÃÖ   =   0.4                     ,
        œÅ   =   0.1                     ,
    )
    for k ‚àà 1:2
        instance = instances[k]
        method   = methods[k]
        println("\n Solving $instance")
        s‚Çí = initialsolution(instance, method)     
        S  = ALNS(œá, s‚Çí)
        s‚É∞  = S[end]
        @test isfeasible(s‚Çí)
        @test isfeasible(s‚É∞)
        @test f(s‚É∞) ‚â§ f(s‚Çí)
    end
    return
end
