using TSP
using Revise
using Test
using Random

@testset "TSP.jl" begin
    K = 5
    instances = ["att48", "eil101", "ch150", "d198", "a280"]
    methods = [:cw_init, :nn_init, :random_init, :regret‚ÇÇinit, :regret‚ÇÉinit]
    œá   = ALNSParameters(
        kÃ≤   =   1                       ,
        lÃ≤   =   50                      ,
        lÃÖ   =   125                     ,
        kÃÖ   =   250                     ,
        Œ®·µ£  =   [
                    :random_remove! , 
                    :shaw_remove!   ,
                    :worst_remove!   
                ]                       , 
        Œ®·µ¢  =   [
                    :best_insert!   ,
                    :greedy_insert! ,
                    :regret‚ÇÇinsert! ,
                    :regret‚ÇÉinsert!
                ]                       ,
        Œ®‚Çó  =   [
                    :move!          ,
                    :opt!           ,
                    :swap!
                ]                       ,
        œÉ‚ÇÅ  =   33                      ,
        œÉ‚ÇÇ  =   9                       ,
        œÉ‚ÇÉ  =   13                      ,
        œâ   =   0.05                    ,
        œÑ   =   0.5                     ,
        ùúÉ   =   0.99975                 ,
        CÃ≤   =   30                      ,
        CÃÖ   =   60                      ,
        ŒºÃ≤   =   0.1                     ,
        ŒºÃÖ   =   0.4                     ,
        œÅ   =   0.1                     ,
    )
    for k ‚àà 1:K
        instance = instances[k]
        method = methods[k]
        println("\n Solving $instance")
        G = build(instance)
        s‚Çí= initialsolution(G, method)     
        @test isfeasible(s‚Çí)
        S = ALNS(œá, s‚Çí)
        s‚É∞ = S[end]
        @test isfeasible(s‚É∞)
        @test f(s‚É∞) ‚â§ f(s‚Çí)
    end
    return
end
