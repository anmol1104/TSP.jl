using TSP
using Revise
using Random

let
# Developing an optimal TSP route 
    # Define instance
    instance = "a280"
    # Define a random number generator
    rng = MersenneTwister(1234)
    # Build instance as graph
    G = build(instance)
    N, A = G
    # Visualize instance
    display(visualize(Solution(N,A)))
    # Define inital solution method and build the initial solution
    method = :cw_init
    s‚Çí = initialsolution(rng, G, method)
    # Define ALNS parameters
    x = length(N)
    n = ceil(x, digits=-(length(digits(x))-1))
    œá   = ALNSParameters(
        kÃ≤   =   n √∑ 25                  ,
        lÃ≤   =   2n                      ,
        lÃÖ   =   5n                      ,
        kÃÖ   =   10n                     ,
        Œ®·µ£  =   [
                    :random_remove! , 
                    :shaw_remove!   ,
                    :worst_remove!   
                ]                       , 
        Œ®·µ¢  =   [
                    :best_insert!   ,
                    :greedy_insert! ,
                    :regret‚ÇÇinsert! ,
                    :regret‚ÇÉinsert!
                ]                       ,
        Œ®‚Çó  =   [
                    :move!          ,
                    :opt!           ,
                    :swap!
                ]                       ,
        œÉ‚ÇÅ  =   33                      ,
        œÉ‚ÇÇ  =   9                       ,
        œÉ‚ÇÉ  =   13                      ,
        œâ   =   0.05                    ,
        œÑ   =   0.5                     ,
        ùúÉ   =   0.99975                 ,
        CÃ≤   =   30                      ,
        CÃÖ   =   60                      ,
        ŒºÃ≤   =   0.1                     ,
        ŒºÃÖ   =   0.4                     ,
        œÅ   =   0.1                     ,
    )
    # Run ALNS and fetch best solution
    S = ALNS(rng, œá, s‚Çí)
    s‚É∞ = S[end]
# Fetch objective function values
    println("Initial: $(f(s‚Çí))")
    println("Optimal: $(f(s‚É∞))")
# Visualizations
    # Visualize initial solution
    display(visualize(s‚Çí)) 
    # Visualize best solution   
    display(visualize(s‚É∞))
    # Animate ALNS solution search process from inital to best solution
    display(animate(S))
    # Show convergence plots
    display(convergence(S))
    return
end